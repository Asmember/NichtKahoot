name: Docker Image CI

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      repo-owner: ${{ steps.set-variables.outputs.repo-owner }}
      repo-name: ${{ steps.set-variables.outputs.repo-name }}
    steps:
    - uses: actions/checkout@v4

    - name: Set lowercase repository owner and name
      id: set-variables
      run: |
        echo "repo-owner=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
        echo "repo-name=$(echo '${{ github.event.repository.name }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
        echo "::set-output name=repo-owner::$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')"
        echo "::set-output name=repo-name::$(echo '${{ github.event.repository.name }}' | tr '[:upper:]' '[:lower:]')"

    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

    - name: Build the Docker image
      run: |
        docker build . --file Dockerfile --tag ghcr.io/${{ steps.set-variables.outputs.repo-owner }}/${{ steps.set-variables.outputs.repo-name }}:latest

  push:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

    - name: Push the Docker image
      run: |
        docker push ghcr.io/${{ needs.build.outputs.repo-owner }}/${{ needs.build.outputs.repo-name }}:latest

  scan:
    needs: push
    runs-on: ubuntu-latest
    steps:
    - name: Scan the Docker image for vulnerabilities
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ghcr.io/${{ needs.build.outputs.repo-owner }}/${{ needs.build.outputs.repo-name }}:latest
