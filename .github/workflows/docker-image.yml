name: Docker Image CI

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set lowercase repository owner and name
      run: |
        echo "repo-owner=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
        echo "repo-name=$(echo '${{ github.event.repository.name }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag ghcr.io/${{ env.repo-owner }}/${{ env.repo-name }}:latest

  push:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Set lowercase repository owner and name
      run: |
        echo "repo-owner=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
        echo "repo-name=$(echo '${{ github.event.repository.name }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
    
    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

    - name: Push the Docker image
      run: docker push ghcr.io/${{ env.repo-owner }}/${{ env.repo-name }}:latest

  scan:
    needs: push
    runs-on: ubuntu-latest
    steps:
    - name: Set lowercase repository owner and name
      run: |
        echo "repo-owner=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
        echo "repo-name=$(echo '${{ github.event.repository.name }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
    
    - name: Scan the Docker image for vulnerabilities
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ghcr.io/${{ env.repo-owner }}/${{ env.repo-name }}:latest
